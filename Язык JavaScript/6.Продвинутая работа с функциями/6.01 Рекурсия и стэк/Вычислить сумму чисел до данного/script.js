// Напишите функцию sumTo(n), которая вычисляет сумму чисел 1 + 2 + ... + n.

// Например:

// sumTo(1) = 1
// sumTo(2) = 2 + 1 = 3
// sumTo(3) = 3 + 2 + 1 = 6
// sumTo(4) = 4 + 3 + 2 + 1 = 10
// ...
// sumTo(100) = 100 + 99 + ... + 2 + 1 = 5050
// Сделайте три варианта решения:

// С использованием цикла.
// Через рекурсию, т.к. sumTo(n) = n + sumTo(n-1) for n > 1.
// С использованием формулы арифметической прогрессии.
// Пример работы вашей функции:

function sumTo(n) {
  let res = 0;
  for (let i = 0; i <= n; i++) {
    res = res + i;
  }
  return res;
}

function sumTo(n) {
  if (n < 1) {
    return n;
  } else {
    return n + sumTo(n - 1);
  }
}

function sumTo(n) {
  let res = ((1 + n) * n) / 2;

  return res;
}

console.log(sumTo(100)); // 5050
// P.S. Какой вариант решения самый быстрый? Самый медленный? Почему?
Самое быстрое решение по формуле это очевидно нет итераций не занят стек
// P.P.S. Можно ли при помощи рекурсии посчитать sumTo(100000)?
Скорее всего нет в статье указано об ограничении памяти стека
